{"version":3,"sources":["components/container/Navbar/Navbar.js","components/presentational/ProductCard/ProductCard.js","components/presentational/Loader/Loader.js","components/container/Home/Home.js","components/container/About/About.js","components/container/Cart/Cart.js","components/presentational/ProductForm/ProductForm.js","components/container/Admin/Admin.js","routes.js","redux/reducer.js","App.js","redux/store.js","index.js"],"names":["Navbar","logout","axios","post","then","res","alert","data","message","props","history","go","catch","err","console","log","login","redirectURI","encodeURIComponent","window","location","origin","process","path","this","push","user","className","onClick","linkFunc","src","profile_picture","alt","nickname","Component","withRouter","connect","state","ProductCard","name","price","Loader","Home","products","loading","get","headers","setState","length","map","product","key","id","About","sampleCartData","description","Cart","ProductForm","handleName","handleDescription","handlePrice","handlePictureUpload","picture","type","onChange","e","target","files","value","Admin","val","handleDesciption","formData","FormData","append","payload","signature","timestamp","entries","response","createProduct","doCreate","create","exact","component","initialState","App","dispatch","routes","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.a396c72a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//import withRouter so, you can access this.props.history\nimport { withRouter } from \"react-router-dom\";\n//import connect to connect your component to the store, and specify what you want from the initialState in the reducer.\nimport { connect } from \"react-redux\";\n//import axios to logout the user.\nimport axios from \"axios\";\n//Import the css file for styling.\nimport \"./Navbar.css\";\n\nexport class Navbar extends Component {\n  //Define your linkFunc so it will redirect to specified route provided via argument.\n  linkFunc(path) {\n    this.props.history.push(path);\n  }\n  //Logout function that will logout hte user from the initialState.\n  logout = () => {\n    //Pass a empty since you are just logging out the user.\n    axios\n      .post(\"/api/logout\", {})\n      .then(res => {\n        //The will logout a user\n        alert(res.data.message);\n        //Reload the browser using this.props.history.go();\n        this.props.history.go();\n      })\n      .catch(err => console.log(\"Logout Axios Error-------\", err));\n  };\n  login = () => {\n    //Define your encodedURi since your are dealing with oAuth, so it can be secure, and oAuth and decode it.\n    //Have your location origin, with your auth0 proxy which will be auth/calllback\n    const redirectURI = encodeURIComponent(\n      `${window.location.origin}/auth/callback`\n    );\n    //Redirect the user to your Auth0 domain, with the correct query parameters to retrieve code from auth0.\n    window.location = `https://${process.env.REACT_APP_AUTH0_DOMAIN}/login?client=${process.env.REACT_APP_AUTH0_CLIENT_ID}&scope=openid%20profile%20email&redirect_uri=${redirectURI}`;\n  };\n  render() {\n    console.log(this.props.user);\n    return (\n      <div className=\"nav container\">\n        <div className=\"desktop-nav\">\n          {/* Make sure every link uses linkFunc, except the login link. s*/}\n          <p className=\"nav-link\" onClick={() => this.linkFunc(\"/\")}>\n            Home\n          </p>\n          <p className=\"nav-link\" onClick={() => this.linkFunc(\"/about\")}>\n            About\n          </p>\n          <p className=\"nav-link\" onClick={() => this.linkFunc(\"/cart\")}>\n            Cart\n          </p>\n          {/* Conditionally render the login button based if the user has data(it's login) else logout */}\n          {/* Conditional render the user image if logged in. */}\n          <div\n            className=\"nav-link\"\n            onClick={() => (this.props.user ? this.logout() : this.login())}\n          >\n            {this.props.user ? (\n              <div>\n                <p>Logout</p>\n                <img\n                  className=\"user-image\"\n                  src={this.props.user.profile_picture}\n                  alt={this.props.user.nickname}\n                />\n              </div>\n            ) : (\n              <p>Login</p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\n//Then wrap our Component with the HOC, and the connect double invoked.\nexport default withRouter(connect(mapStateToProps)(Navbar));\n","import React from \"react\";\n//Import the css file for styling\nimport \"./ProductCard.css\";\n\n//Don't forget to pass props to a stateless component as a argument.\nconst ProductCard = props => {\n  const { name, price } = props;\n  return (\n    <div className=\"product-card container\">\n      <div>\n        <p className=\"product-card label\">{name}</p>\n        <p className=\"product-card label\">${price}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React from \"react\";\n//Import csss file.\nimport \"./Loader.css\";\n\nconst Loader = props => {\n  return (\n    <div className=\"loader-div\">\n      <h3>Loading......</h3>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\n//import axios to call your backend.\nimport axios from \"axios\";\n//Import the ProductCard that will be responsible for rendering each product.\nimport ProductCard from \"../../presentational/ProductCard/ProductCard\";\n//Import the loader that is used when the data is being retrieved\nimport Loader from \"../../presentational/Loader/Loader\";\n//import css file for styling\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //Have a products and loading\n      //products holding all your products\n      products: [],\n      //loading for when loader is shown\n      //set it true, and when data is retrieve set to false.\n      loading: true\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(\"/api/products\")\n      .then(res => {\n        //always have console.logs for debugging\n        console.log(\"res.data products-----------\", res.data);\n        console.log(res.headers);\n        /////Set your loading to false, and products to the res.data, since we are doing res.send in our backend.\n        this.setState({ products: res.data, loading: false });\n        //Each .then must have a .catch to catch errors.\n      })\n      .catch(err => console.log(\"Read all products Error-------\", err));\n  }\n  render() {\n    //Destruct the products, loading from state.\n    const { products, loading } = this.state;\n    //If it is done loading return html else return the loading indicator.\n    if (!loading) {\n      return (\n        <div className=\"home container\">\n          <div className=\"home-products container\">\n            {/* If hte products have data return products else return nothing using terinary statement */}\n            {products.length\n              ? products.map(product => (\n                  <ProductCard key={product.id} {...product} />\n                ))\n              : null}\n          </div>\n        </div>\n      );\n    } else {\n      return <Loader />;\n    }\n  }\n}\n","import React, { Component } from \"react\";\n//Import the css file for styling.\nimport \"./About.css\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className=\"about container\">\n        <div className=\"about-info container\">\n          <h1>About</h1>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis ut\n            justo in mauris lobortis bibendum nec nec tellus. Morbi est ipsum,\n            pretium nec est vel, maximus congue metus. Proin eu euismod turpis,\n            eget ornare nunc. Suspendisse id aliquet justo, eget ornare ligula.\n            Nunc eu pretium nisi, vel maximus leo. Ut tempus risus quis\n            ultricies dictum. Donec at mauris justo. Vestibulum ut lorem vitae\n            tellus facilisis volutpat vitae quis purus. Suspendisse lobortis\n            fermentum placerat.\n          </p>\n          <p>\n            Nam efficitur dui et urna ullamcorper rhoncus. Proin porta aliquet\n            ipsum, ac volutpat diam auctor eu. Ut tristique odio ligula, ut\n            aliquam ex consequat rutrum. In vel magna a velit rhoncus ornare.\n            Phasellus arcu felis, consectetur non nunc nec, finibus rutrum\n            libero. Nulla consequat lorem et felis semper, ut tempus orci\n            lacinia. Sed molestie mi sodales lacinia scelerisque. Pellentesque\n            tellus augue, molestie non sagittis sed, eleifend ac eros. Vivamus\n            tortor quam, viverra sit amet libero a, dignissim auctor odio. In\n            erat nulla, molestie a urna eu, porttitor euismod felis. Lorem ipsum\n            dolor sit amet, consectetur adipiscing elit. Quisque ipsum sapien,\n            fermentum sit amet eleifend eget, consequat a lacus. Sed nulla odio,\n            laoreet ut dictum sit amet, ornare quis augue. Nam blandit et metus\n            ut vestibulum. Maecenas bibendum diam laoreet urna sollicitudin, in\n            pellentesque diam condimentum.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n//import the ProductCard component to display what is in the cart.\nimport ProductCard from \"../../presentational/ProductCard/ProductCard\";\n//import the css file for styling\nimport \"./Cart.css\";\n\n//Define sample data for now to display in your cart.\nconst sampleCartData = [\n  { name: \"Test 1\", description: \"Test Product 1\", price: 20, id: 1 },\n  { name: \"Test 2\", description: \"Test Product 2\", price: 10, id: 2 },\n  { name: \"Test 3\", description: \"Test Product 3\", price: 30, id: 3 }\n];\nexport default class Cart extends Component {\n  render() {\n    return (\n      <div className=\"cart container\">\n        <div className=\"cart-info container\">\n          <h2>Your Cart!</h2>\n          <div>\n            {sampleCartData.map(product => (\n              <ProductCard key={product.id} {...product} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst ProductForm = props => {\n  const {\n    handleName,\n    handleDescription,\n    handlePrice,\n    handlePictureUpload,\n    name,\n    description,\n    price,\n    picture\n  } = props;\n  return (\n    <div>\n      <form>\n        <img src={picture} alt={name} />\n        <input\n          type=\"file\"\n          onChange={e => handlePictureUpload(e.target.files)}\n          value={picture}\n        />\n        <input\n          type=\"text\"\n          onChange={e => handleName(e.target.value)}\n          value={name}\n        />\n        <input\n          type=\"text\"\n          onChange={e => handleDescription(e.target.value)}\n          value={description}\n        />\n        <input\n          type=\"text\"\n          onChange={e => handlePrice(e.target.value)}\n          value={price}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default ProductForm;\n","import React, { Component } from \"react\";\n//import css file for styling\nimport \"./Admin.css\";\n//import the product form that will responsible for creating a product.\nimport ProductForm from \"../../presentational/ProductForm/ProductForm\";\n//import axios to do axios calls\nimport axios from \"axios\";\n//Have global variable set to your Cloudinary Url.\nconst CLOUDINARY_URL = \"https://api.cloudinary.com/v1_1/bg00/image/upload\";\n//import axios that will getALlProducts, createAProduct\nexport default class Admin extends Component {\n  //In our state we will have a name, description, price, and picture in our state which will be our values when we create a product\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      description: \"\",\n      price: \"\",\n      picture: \"\",\n      //Define the boolean that will display the form.\n      doCreate: false\n    };\n  }\n  //We are gonna make it a arrow function since we are gonna pass it to our Form component\n  handleName = val => {\n    this.setState({ name: val });\n  };\n  handleDesciption = val => {\n    this.setState({ description: val });\n  };\n  handlePrice = val => {\n    this.setState({ price: val });\n  };\n  //This is where will do an axios.get towards our cloudinary endpoint\n  //which will have a axios.post within the .then posting to your cloudinary database.\n  //In handle Changes for uploading images will use files.\n  handlePictureUpload = files => {\n    console.log(\"files----------\", files[0]);\n    //Do a axios.get to get our credentials we will use to post to our cloudinary database.\n    //NOw define your formData, and append each value with a string, then a value.\n    const formData = new FormData();\n    axios\n      .get(\"/api/upload\")\n      .then(res => {\n        //  console.log(res.data.payload);\n        //  console.log(process.env.REACT_APP_CLOUDINARY_API_KEY);\n        //Append signature and cloudinary key\n        formData.append(\"signature\", res.data.payload.signature);\n        //Then append the cloudinary api key.\n        formData.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_API_KEY);\n        //Then append the timestamp\n        formData.append(\"timestamp\", res.data.payload.timestamp);\n        //Then append the image itself which will be the first value of the files array, make sure the string is file not files.\n        formData.append(\"file\", files[0]);\n        //For debugging  purpose console.log each property of formData.entries()\n        for (let key in formData.entries()) {\n          console.log(\"key----------\", key);\n        }\n        //Now post the image with all the credentails.\n        axios\n          .post(CLOUDINARY_URL, formData)\n          .then(response => {\n            //Now set the state of the image using the secure url\n            console.log(response);\n            // this.setState({picture: response.data.secure_url})\n          })\n          .catch(err =>\n            console.log(\"Error posting to cloudinary database\", err)\n          );\n      })\n      .catch(err => console.log(\"Get credentials Error---------\", err));\n  };\n  createProduct = () => {\n    //Destruct name, price, descrption, and picture from the state to post it to our database.\n    const { name, price, description, picture, doCreate } = this.state;\n    //If the form is show, and all the input fields have values.\n    if (doCreate && name && price && description && picture) {\n      axios\n        .post(\"/api/products\", { name, price, description, picture })\n        .then(res => {\n          //Console.log the new product your just created\n          console.log(res.data.product);\n        })\n        .catch(err => console.log(\"Create Products Error-------------\", err));\n    } else {\n      //Set the state of doCreate\n      this.setState({ doCreate: !this.state.doCreate });\n    }\n  };\n  render() {\n    const { picture, description, name, price } = this.state;\n    return (\n      <div className=\"admin container\">\n        <h2>Admin</h2>\n        <button onClick={() => this.createProduct()}>Create Product</button>\n\n        <ProductForm\n          create={this.createProduct}\n          handleName={this.handleName}\n          handleDesciption={this.handleDesciption}\n          handlePrice={this.handlePrice}\n          handlePictureUpload={this.handlePictureUpload}\n          {...this.state}\n        />\n        <form>\n          <img src={picture} alt={name} />\n          <input\n            type=\"file\"\n            onChange={e => this.handlePictureUpload(e.target.files)}\n            value={picture}\n          />\n          <input\n            type=\"text\"\n            onChange={e => this.handleName(e.target.value)}\n            value={name}\n          />\n          <input\n            type=\"text\"\n            onChange={e => this.handleDescription(e.target.value)}\n            value={description}\n          />\n          <input\n            type=\"text\"\n            onChange={e => this.handlePrice(e.target.value)}\n            value={price}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n","//Need to import react becuase the Route itself is a component.\nimport React from \"react\";\n//Import the Route, and Switch Comopnent used for defining your routes.\n//Route is the route itself which can accept render props, but for the purpose of this tutorial we used the component and path prop.\n//Switch responsible for directing to first child that matches thier respective route.\nimport { Route, Switch } from \"react-router-dom\";\n//Now import the components you'll pass as props.\nimport Home from \"./components/container/Home/Home\";\nimport About from \"./components/container/About/About\";\nimport Cart from \"./components/container/Cart/Cart\";\nimport Admin from \"./components/container/Admin/Admin\";\n\n//When dealing with default exports we do not even need to name the export since when it is imported we can name it whatever we want.\nexport default (\n  <Switch>\n    {/*Use the exact keyword means it will direct to that exact route, and used primarily when creating sub routes. */}\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/cart\" component={Cart} />\n    <Route path=\"/admin\" component={Admin} />\n  </Switch>\n);\n","//Define your initialState that will be used for the reducer.\nconst initialState = {\n  user: null\n};\n\n//Define your action types.\nconst LOGIN = \"LOGIN\";\nconst LOGOUT = \"LOGOUT\";\n\n//When doing a default export with a reducer which is essentially a function with a state and action argument, with the state default set to initialState.\nexport default (state = initialState, action) => {\n  //Do a switch statement on the action.type, and set the state base on the action's type\n  switch (action.type) {\n    //Have the login action type that will set the initialState user property to the action's payload.\n    case LOGIN:\n      //Use the spread to pass in the values of the initialState, and set the new property user.\n      return { ...state, user: action.payload };\n    //Have the logout action type that will set the initialState user property to null when user's logs out.\n    case LOGOUT:\n      //Use the spread to pass in the values of the initialState, and set the new property user to it's default value(null).\n      return { ...state, user: null };\n    default:\n      //if there is not action type return the state by default.\n      return state;\n  }\n};\n\n//Export the function that will login the user to it's initialState.\nexport const login = userInfo => {\n  return {\n    type: LOGIN,\n    payload: userInfo\n  };\n};\n\n//Export the function that will logs the user out from state.\nexport const logout = () => {\n  return {\n    type: LOGOUT\n  };\n};\n","import React, { Component } from \"react\";\n//Import Home in order to render Home Component\n// import Home from'./components/container/Home/Home';\nimport Navbar from \"./components/container/Navbar/Navbar\";\n//Configure the routes by importing the default export from the routes.js file,\n//Then delete the Home component, and put the routes underneath the nav.\nimport routes from \"./routes\";\n//import withROuter since you are using redux, and you want your app to have access to this.props.history.\nimport { withRouter } from \"react-router-dom\";\n//Import connect from redux to have access your initialState in the reducer, and all it's actions.\nimport { connect } from \"react-redux\";\n//import actions that will be implemented in your reducer.\nimport { login, logout } from \"./redux/reducer\";\n//import axios to get your user session from your backend.\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends Component {\n  //In it's componentDidMount  get the session, and if it has data set your intialState user to it.\n  componentDidMount() {\n    axios.get(\"/api/user-data\").then(res => {\n      //Destruct the dispatch props from this.props that will be responsible for dispatching or initiating actions from your reducer.\n      const { dispatch } = this.props;\n      if (res.data.user) {\n        //Dispatch the login function with the user data.\n        dispatch(login(res.data.user));\n        //Else logout the user from the intialState.\n      } else {\n        //Dispatch the logout the user by default if there is no data in session.\n        dispatch(logout());\n      }\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        {routes}\n      </div>\n    );\n  }\n}\n\n//THen connect your app to your reducer.\nexport default withRouter(connect()(App));\n","//Import the reducer to export it with the reducer.\nimport reducer from \"./reducer\";\n//import createStore that will create a store from redux.\nimport { createStore } from \"redux\";\n\n//Export the reducer with redux devtools\nexport default createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//Now import your Router for your routes and wrap your app in it.\nimport { BrowserRouter } from \"react-router-dom\";\n//import Provider to connect your app component to the store,  by wrapping your BrowserRouter\nimport { Provider } from \"react-redux\";\n//import the store that will be your store for your app .\nimport store from \"./redux/store\";\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// registerServiceWorker();\n"],"sourceRoot":""}